<?php


/**
 * Implementation of hook_preprocess_page().
 */
function shortcode_ubc_preprocess_page(&$variables) {
  $path = drupal_get_path('module', 'shortcode_ubc');
  //drupal_add_css($path . '/css/shortcodestyles.css', array('group' => CSS_DEFAULT));
  drupal_add_js($path . '/js/shortcode_ubc.js');
}

/**
* Implementation of hook_shortcode_info().
* Using same formatting as hook_filter_info()
*/
function shortcode_ubc_shortcode_info() {
  $shortcodes = array();

  $shortcodes['columns'] = array(
    'title' => t('Columns'),
    'description' => t('Simple columns in content'),
    'process callback' => 'shortcode_ubc_columns',
    'tips callback' => 'shortcode_ubc_columns_tips',
    'default settings' => array(),
    'attributes callback' => 'shortcode_ubc_columns_attributes',
  );

    $shortcodes['column-item'] = array(
        'title' => t('Column Item'),
        'description' => t('Individual column item. Required for Columns.'),
        'process callback' => 'shortcode_ubc_column_item',
        'default settings' => array(),
        'attributes callback' => 'shortcode_ubc_column_item_attributes',
    );

  $shortcodes['accordion'] = array(
    'title' => t('Accordion'),
    'description' => t('JQuery toggle accordion content'),
    'process callback' => 'shortcode_ubc_accordion',
    'tips callback' => 'shortcode_ubc_accordion_tips',
    'default settings' => array(),
    'attributes callback' => 'shortcode_ubc_accordion_attributes',
  );

    $shortcodes['tabs'] = array(
        'title' => t('Tabbed Content'),
        'description' => t('JQuery tabbed content'),
        'process callback' => 'shortcode_ubc_tabs',
        'tips callback' => 'shortcode_ubc_tabs_tips',
        'default settings' => array(),

    );

    $shortcodes['tab-item'] = array(
        'title' => t('Tabs pane'),
        'description' => t('Converts inner contents to a tab. Required for Tabbed Content.'),
        'process callback' => 'shortcode_ubc_tab_item',
        'default settings' => array(),
        'attributes callback' => 'shortcode_ubc_tab_item_attributes',
    );


  return $shortcodes;
}


/*============================================================================================*/
/* Jquery toggle content Shortcode
/*============================================================================================*/
function shortcode_ubc_accordion( $attrs, $content = null ) {
  extract(shortcode_attrs(array(
  'title'      => '',
  'expanded'      => FALSE,
  ), $attrs));
  //$collapsed = '';
  
  $classes = array();
  if ($expanded) {
    $classes[] = 'default';
  }
  else {
    $classes[] = '';
  }

  $classes = implode(' ', $classes);
	
	
  $out =  '<div class="accordion"><div class="accordion-tab" tabindex="0">' . $title . '</div>';
  $out .= '<div class="accordion-content ' . $classes . ' clearfix" style="display: none; ">' . $content . '</div>';
  $out .= '</div>';

  return $out;
}


function shortcode_ubc_accordion_tips($format, $long) {
  $output = 'Shortcode for accordions use:<br>[accordion title="Your Accordion Title"]Your content here[/accordion]<br>
            To make open by default, add "expanded=1" to the accordion you want open:
            E.g. [accordion title="Open Accordion" expanded="1"]Content and text in here. [/accordion]';
  return $output;
}

function shortcode_ubc_accordion_attributes($form, $form_state) {
  $form['expanded'] = array(
    '#type' => 'select',
    '#title' => t('Collapsed / Expanded'),
    '#options' => array(
      '' => t('Collapsed'),
      1 => t('Expanded'),
    ),
    '#states' => array(
      'visible' => array(
        ':input[name="shortcode"]' => array('value' => 'accordion'),
      ),
    ),
  );
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => t('Title'),
    '#description' => t('Must be a valid CSS color.'),
    '#size' => 60,
    '#maxlength' => 60,
    '#states' => array(
      'visible' => array(
        ':input[name="shortcode"]' => array('value' => 'accordion'),
      ),
    ),
  );
  return $form;
}

/*============================================================================================*/
/* Jquery Tabbed Content Shortcode
/*============================================================================================*/

function shortcode_ubc_tabs($attrs, $content = NULL){

    $tabbed_content = &drupal_static('tabbed_content', array());

    $output = '<div class="tab-wrapper">';
    if(!empty($tabbed_content)){
        $output .= '<ul class="tabs">';
        $num = 0;
        foreach ($tabbed_content as $id => $title) {
            $class = '';
            if($num == 0){
                $class = 'class="active"';
            }
            $output .= '<li '.$class.' rel="'.$id.'">'.$title.'</li>';
            $num++;
        }
        $output .= '</ul>';

    }
    $output .= '<div class="tab_container">';
    $output .= $content;
    $output .= '</div></div>';

    drupal_static_reset('tabbed_content');
    return $output;

}

/**
 * @param $attrs
 * @param null $content
 * @return string
 */
function shortcode_ubc_tab_item($attrs, $content = NULL){
    extract(shortcode_attrs(array(
        'position'      => 0,
        'title' => '',
    ), $attrs));

    $id = "tab$position";

    $tabbed_content = &drupal_static('tabbed_content');

    $tabbed_content[$id] = $title;

    $output = '<h5 class="tab_drawer_heading" rel="'.$id.'">'.$title.'</h5>';
    $output .= '<div id="'.$id.'" class="tab_content">';
    $output .= "<p>$content</p>";
    $output .= '</div>';

    return $output;
}


function shortcode_ubc_tabs_tips($format, $long) {
    $output = 'Shortcode for tabbed content use:<br>[tabs]<br>
        [tab-item position="1" title="Your tab title"]Your content[/tab-item]<br>
        [tab-item position="2" title="Next tab title"]Next content[/tab-item]<br>
        [/tabs]';
    return $output;
}

function shortcode_ubc_tab_item_attributes($form, $form_state) {

    $form['title'] = array(
        '#type' => 'textfield',
        '#title' => t('Title'),
        '#description' => t('Must be a valid CSS color.'),
        '#size' => 60,
        '#maxlength' => 60,
        '#states' => array(
            'visible' => array(
                ':input[name="shortcode"]' => array('value' => 'tabs'),
            ),
        ),
    );
    $form['position'] = array(
        '#type' => 'textfield',
        '#title' => t('Tab Position'),
        '#description' => t('Must be a numeric value less than 10 (e.g. 1-9)'),
        '#size' => 1,
        '#maxlength' => 1,
        '#states' => array(
            'visible' => array(
                ':input[name="shortcode"]' => array('value' => 'tabs'),
            ),
        ),
    );


    return $form;
}

/*============================================================================================*/
/* CLF Content in Columns
/*============================================================================================*/

function shortcode_ubc_columns($attrs, $content = NULL){

    $output = '<div class="clearfix">';
    $output .= $content;
    $output .= '</div>';

    return $output;

}

function shortcode_ubc_columns_tips($format, $long) {
    $output = 'Shortcode for putting content into columns use:<br>
        [columns]<br>
        [column-item width="1-quarter"]First column content[/column-item]<br>
        [column-item width="1-half"]Fatter middle content[/column-item]<br>
        [column-item width="1-quarter"]Third and last column[/column-item]<br>
        [/columns]<br>
        Note: width options are 1-half, 1-third, 2-third, 1-quarter, 3-quarter to represent 1/2, 1/3, 2/3, 1/4 and 3/4 respectively.';
    return $output;
}

function shortcode_ubc_column_item($attrs, $content = NULL){

    extract(shortcode_attrs(array(
        'width' => '',
    ), $attrs));

    $width_classes = array( '1-half' => 'span6',
                            '1-third' => 'span4',
                            '2-third' => 'span8',
                            '1-quarter' => 'span3',
                            '3-quarter' => 'span9',
                            );


   // $tabbed_content[$id] = $width;

    $output = '<div class="'.$width_classes[$width].'">'.$content.'</div>';

    return $output;

}

function shortcode_ubc_column_item_attributes($form, $form_state) {


    $form['width'] = array(
        '#type' => 'textfield',
        '#title' => t('Column size'),
        '#description' => t('Portion size for this column. Note all column widths should add up to 1'),
        '#size' => 15,
        '#maxlength' => 20,
        '#states' => array(
            'visible' => array(
                ':input[name="shortcode"]' => array('value' => 'columns'),
            ),
        ),
    );

    return $form;
}